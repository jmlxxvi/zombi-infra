#
# Ngxinx configuration file for secure websocket applications.
#
# - Listens on 80 (HTTP) and 443 (HTTPS)
# - Redirects all port 80 traffic to port 443
# - Manages load balancing across Node.js upstream processes.
#

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    include /etc/nginx/conf.d/*.conf;

    upstream backend_services {
        server 127.0.0.1:8080;
    }

    server {
        # Listen on 80 and 443
        listen 80;
        listen 443 ssl;
        # Self-signed certificate.
        ssl_certificate /etc/tls/cert.crt;
        ssl_certificate_key /etc/tls/cert.key;

        # Redirect all non-SSL traffic to SSL.
        if ($ssl_protocol = "") {
            rewrite ^ https://$host$request_uri? permanent;
        }

        # Split off traffic to Node.js backends, and make sure that websockets
        # are managed correctly.
        location /server {
            proxy_pass http://backend_services;
            proxy_http_version 1.1;
            proxy_set_header Upgrade websocket;
            proxy_set_header Connection upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $http_host;
        }
    
        # Send everything else to a local webroot.
        root /home/centos/zombi-server/public;
        index index.html index.htm;
        location / {
            try_files $uri $uri/ index.html;
        }

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }
}

